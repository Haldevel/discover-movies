{"version":3,"sources":["utils/API.js","components/SearchBar.js","components/MoviesList.js","pages/Homepage.js","pages/Movie.js","components/App.js","index.js"],"names":["BASEURL","APIKEY","API","searchMovies","query","axios","get","getPopularMovies","getSingleMovie","id","btnStyle","paddingLeft","paddingRight","marginTop","marginLeft","SearchBar","state","title","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","style","type","value","onChange","e","setState","target","for","React","Component","imageStyle","margin","display","titleDiv","fontSize","position","bottom","left","width","height","background","opacity","color","MoviesList","movies","map","movie","key","alt","src","concat","poster_path","popularity","overview","react_router_dom","to","pathname","Homepage","getInitMovies","then","res","data","results","catch","err","console","log","search","onSearchSubmit","routeChangeAddItem","_id","history","push","components_SearchBar","components_MoviesList","marginRight","info","Movie","genres","budget","poster","release_date","vote_average","vote_count","getMovie","gen","genre","name","original_title","match","params","genresStr","i","length","App","basename","react_router","exact","path","component","require","config","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.c935fa3a.chunk.js","sourcesContent":["import axios from \"axios\";\nconst BASEURL = \"https://api.themoviedb.org/3/\";\nconst POPQUERY = \"discover/movie?sort_by=popularity.desc&page=1&include_adult=false\";\nconst SEARCHPATH = \"search/movie?query=\";\nconst SINGLEPATH = \"https://api.themoviedb.org/3/movie/\";\nconst APIKEY = \"&api_key=\" + process.env.REACT_APP_MOVIE_KEY;\nconst APIKEYQUERY = \"?api_key=\" + process.env.REACT_APP_MOVIE_KEY;\n\nexport default {\n\n  //the method returns a list of matching movies based on title\n  searchMovies: function(query) {\n    return axios.get(BASEURL + SEARCHPATH + query + APIKEY);\n  },\n\n  //the method returns a list of twenty most popular movies \n  getPopularMovies: function() {\n    return axios.get(BASEURL + POPQUERY + APIKEY);\n  },\n\n  //the method gets a single movie data\n  getSingleMovie: function(id) {\n    return axios.get(SINGLEPATH + id + APIKEYQUERY);\n  }\n\n};","import React from 'react';\n\nconst btnStyle = {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"5px\",\n    marginLeft: \"20px\",\n}\n\n//class component SearchBar\nclass SearchBar extends React.Component {\n\n    //define state\n    state = { title: ''};\n\n    //use arrow function to bind automatically\n    onFormSubmit = event => {\n        event.preventDefault(); //to prevent submitting the form automatically\n        this.props.onSubmit(this.state.title); //pass state to the callback from App component\n    \n    }\n\n    render() {\n        return (\n            <div className=\"row\" style={{marginTop: '20px'}}>\n                <form className=\"col s10 m8\" onSubmit={this.onFormSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s10\">\n                            <i className=\"material-icons prefix\">search</i>\n                            <input className=\"input-field\" id=\"search\" type=\"text\" value = {this.state.title} onChange={(e) => this.setState({ title: e.target.value})}></input>\n                            <label for=\"search\">Search for movies</label>\n                        </div>    \n                        <button\n                          className=\"waves-effect waves-light btn\"\n                          type=\"submit\" style={btnStyle}>Search</button>                    \n                    </div>             \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst imageStyle = {\n    margin: \"auto\",\n    display: \"block\"\n};\nconst titleDiv = {\n    fontSize: \"22px\",\n    position: \"absolute\",\n    bottom: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"50px\",\n    background: \"#00838f\",\n    opacity: \".8\",\n  /*   padding: \"20px, 5%, 30px, 5%\", */\n    color: \"#FFF\"\n};\n\n\nconst MoviesList = props => {\n\n    /*  the code is commented out but it can be used to display a list of movies\n    return (\n      <ul className=\"list-group\">\n     {props.movies.map(movie => (\n       <li className=\"list-group-item\" key={movie.id}>\n         {movie.title}\n       </li>\n     ))}\n   </ul> */\n    return (\n\n        <div className=\"row\">\n            {props.movies.map(movie => (\n                <div key={movie.id} className=\"col m4 l3\">\n                    <div className=\"card medium z-depth-1 hoverable\">\n                        <div className=\"card-image\">\n                            <img className=\"responsive-img\" alt={movie.title} style={imageStyle} src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} />\n                            <span className=\"card-title\" style={titleDiv}>{movie.title}</span>\n                        </div>\n                        <div className=\"card-content\">\n                            <h6>Popularity: {movie.popularity}</h6>\n                            <p className=\"truncate\">{movie.overview}</p>\n                        </div>\n                        <div>\n                            <Link\n                                className=\"card-action text-center teal-text text-lighten-1\"\n                                to={{ pathname: `/movie/${movie.id}` }}>\n                                Click for details\n                        </Link>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default MoviesList;","import React from 'react';\nimport API from \"../utils/API\";\nimport SearchBar from '../components/SearchBar';\nimport MoviesList from '../components/MoviesList';\n\nclass Homepage extends React.Component {\n\n    state = {movies: []};\n\n    // When this component mounts, search the API for 20 most popular movies\n    componentDidMount() {\n        this.getInitMovies();\n    }\n\n    getInitMovies = () => {\n        API.getPopularMovies()\n        .then(res => this.setState({ movies: res.data.results }))\n        .catch(err => console.log(err)); \n    };\n\n    //a method to search for a movie based on a title\n    search = query => {\n        API.searchMovies(query)\n            .then(res => this.setState({\n                movies: res.data.results\n            }))\n            .catch(err => console.log(err));\n    };\n\n    //a class method which will be called from the child component SearchBar\n    onSearchSubmit = (title) => {\n        this.search(title);\n    };\n\n    //a class method which will be clled from the child component MoviesList\n    routeChangeAddItem = () => {\n        console.log(\"id \" + this.state._id);\n        this.props.history.push(\"/postitem/\" + this.state._id);\n      };   \n\n    //we use two components to render \n    render() {\n        return <div className=\"container\">\n            <SearchBar onSubmit = {this.onSearchSubmit}/> \n            <MoviesList movies = {this.state.movies}/>\n            </div>        \n    };\n\n}\n\nexport default Homepage;","import React from 'react';\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n\nconst imageStyle = {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"40px\"\n};\n\nconst info = {\n    marginLeft: \"10px\"\n}\n\nclass Movie extends React.Component {\n\n    state = {\n        id: \"\",\n        title: \"\",\n        genres: [],\n        budget: 0,\n        overview: \"\",\n        poster: \"\",\n        release_date: \"\",\n        popularity: \"\",\n        vote_average: \"\",\n        vote_count: \"\"\n    };\n\n    // When this component mounts, get all data for one movie with the id passed as a parameter\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.setState({ id });\n        this.getMovie(id);\n    }\n\n    getMovie = (id) => {\n        API.getSingleMovie(id)\n            .then(res => {\n                //map the returned genres array to the array containing only genres names\n                const gen = res.data.genres.map(genre => genre.name);\n                this.setState({\n                    budget: res.data.budget,\n                    title: res.data.original_title,\n                    genres: gen,\n                    overview: res.data.overview,\n                    poster: res.data.poster_path,\n                    release_date: res.data.release_date,\n                    popularity: res.data.popularity,\n                    vote_average: res.data.vote_average,\n                    vote_count: res.data.vote_count\n                })\n            })\n            .catch(err => console.log(err));\n    };\n\n\n    render() {\n\n        //make a string of all genres for the movie\n        let genresStr = this.state.genres[0];\n        for (let i = 1; i < this.state.genres.length; i++) \n            { genresStr = genresStr + \", \" + this.state.genres[i] }\n\n        return (\n            <div className=\"container\">\n                <div className=\"divider\"></div>\n                <div className=\"section\">\n                    <div className=\"row valign-wrapper\">\n                        <div className=\"col s4 center-align\">\n                            <h5>{this.state.title}</h5>\n                        </div>\n                        <div className=\"col s1\">                            \n                        </div>\n                        <div className=\"col s7\">\n                            <p>{this.state.overview}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"divider\"></div>\n                <div className=\"row\">\n                    <div className=\"col s4\">\n                       <img className=\"circle responsive-img z-depth-1\" style={imageStyle} alt={this.state.title} src={`https://image.tmdb.org/t/p/w200/${this.state.poster}`} />\n                    </div>\n                    <div className=\"col s1\"> \n                    </div>\n                    <div className=\"col s7\">\n                        <div className=\"section\">\n                            <h6><b><i>Release Date:</i></b> <span style={info}>{this.state.release_date}</span></h6>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"section\">\n                            <h6><b><i>Budget:</i></b> <span style={info}>{this.state.budget}</span></h6>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"section\">\n                            <h6><b><i>Popularity:</i></b> <span style={info}>{this.state.popularity}</span></h6>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"section\">\n                            <h6><b><i>Voted Rating:</i></b> <span style={info}>{this.state.vote_average}</span></h6>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"section\">\n                            <h6><b><i>Vote Count:</i></b> <span style={info}>{this.state.vote_count}</span></h6>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"section\">\n                            <h6><b><i>Genres:</i></b> <span style={info}>{genresStr}</span></h6>\n                        </div>\n                        <div className=\"divider\"></div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Movie;","import React from 'react';\nimport { Switch, BrowserRouter as Router, Route, withRouter, Redirect } from \"react-router-dom\";\nimport Homepage from \"../pages/Homepage\";\nimport Movie from \"../pages/Movie\";\n\n\n\n\n\nconst App = () => {\n    return (\n        <Router basename=\"/discover-movies\">\n            <div>\n                <Switch>\n                    <Route exact path=\"/\" component={Homepage} />\n                    <Route exact path=\"/movie/:id\" component={Movie} /> */}\n                </Switch>\n            </div>\n        </Router>\n    )\n\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\nrequire('dotenv').config()\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}